# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CandidateInput {
  candidate: String!
  sdpMLineIndex: Int!
  sdpMid: String!
  usernameFragment: String!
}

type Channel {
  createdAt: DateTime!
  deletedAt: DateTime
  detail: String!
  id: Int!
  lat: Float!
  lng: Float!
  name: String!
  owner: User!
  ownerId: Int!
  updatedAt: DateTime!
}

type ConfigureResponse {
  feed: Float!
  jsep: Jsep!
  room: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Deal {
  createdAt: DateTime!
  deletedAt: DateTime
  detail: String!
  id: Int!
  image: Image!
  imageId: Float!
  name: String!
  price: Float!
  quantity: Float!
  updatedAt: DateTime!
  vendorId: Int!
}

type Image {
  createdAt: DateTime!
  data: String!
  deletedAt: DateTime!
  id: Int!
}

type JoinResponse {
  display: String!
  feed: Float!
  publishers: [Publisher!]!
  room: Float!
}

type Jsep {
  sdp: String!
  type: String!
}

input JsepInput {
  sdp: String!
  type: String!
}

type Mutation {
  configure(audio: Boolean!, channelId: Int!, data: Boolean!, feed: Float!, jsep: JsepInput, restart: Boolean, sc_substream_layer: Int, sc_temporal_layers: Int, video: Boolean!): Boolean!
  create(channelId: Int!): Boolean!
  createChannel(lat: Float!, lng: Float!): Channel!
  createPaymentIntent(price: Int!): String!
  disconnect(channelId: Int!): Boolean!
  getChannels(lat: Float!, lng: Float!): [Channel!]!
  getDeals: [Deal!]!
  join(channelId: Int!): Boolean!
  leave(channelId: Int!): Boolean!
  login(phone: String!): User!
  logout(phone: String!): User!
  pause(channelId: Int!): Boolean!
  publish(channelId: Int!): Boolean!
  refresh(refreshToken: String!): RefreshTokentResult!
  resend(phone: String!): User!
  start(channelId: Int!, feed: Float!, jsep: JsepInput!): Boolean!
  subscribe(channelId: Int!, feed: Float!, sc_substream_layer: Int, sc_temporal_layers: Int): Boolean!
  switch(channelId: Int!): Boolean!
  trickle(candidate: CandidateInput!, channelId: Int!, feed: Float!): Boolean!
  trickleComplete(channelId: Int!, feed: Float!): Boolean!
  unpublish(channelId: Int!): Boolean!
  verify(code: String!, phone: String!): VerifyResult!
}

type Publisher {
  audiocodec: String!
  display: String!
  feed: Float!
  streams: [String!]!
  talking: Boolean!
  videocodec: String!
}

type Query {
  user: User!
}

type RefreshTokentResult {
  accessToken: String!
  user: User!
}

type SubscribeResponse {
  display: String!
  feed: Float!
  jsep: Jsep!
  room: Float!
}

type Subscription {
  configured(channelId: Int, userId: Int): ConfigureResponse!
  joined(channelId: Int, userId: Int): JoinResponse!
  subscribed(channelId: Int, userId: Int): SubscribeResponse!
}

type User {
  id: Int!
  isAdmin: Boolean!
  phone: String!
}

type VerifyResult {
  accessToken: String!
  refreshToken: String!
  user: User!
}